package {	import flash.events.Event;		import com.squidder.flar.FLARMarkerObj;	import com.squidder.flar.PVFLARBaseApplication;	import com.squidder.flar.events.FLARDetectorEvent;			/**	 * @author Jon Reiling	 */	public class MultiFLARExample extends PVFLARBaseApplication {				private var _cubes : Array;				//CONSTRUCTOR		public function MultiFLARExample() {						_cubes = new Array();						_markers = new Array();			_markers.push( new FLARMarkerObj( "assets/flar/pattern_kochen.pat" , 16 , 50 , 80 ) );			_markers.push( new FLARMarkerObj( "assets/flar/pattern_reden.pat" , 16 , 50 , 80 ) );			_markers.push( new FLARMarkerObj( "assets/flar/pattern_ende.pat" , 16 , 50 , 80 ) );						super( );		}				override protected function _init( event : Event ) : void {			super._init( event );						}				override protected function _detectMarkers() : void {						_resultsArray = _flarDetector.updateMarkerPosition( _flarRaster , 80 , .5 );					}						override protected function _handleMarkerAdded( event : FLARDetectorEvent ) : void {						_addCube( event.codeId , event.codeIndex );		}		override protected function _handleMarkerRemove( event : FLARDetectorEvent ) : void {				_removeCube( event.codeId , event.codeIndex );			}				private function _addCube( id:int , index:int ) : void {						if ( _cubes[ id ] == null ) _cubes[ id ] = new Array();						if ( _cubes[ id ][ index ] == null ) {								if ( id == 0 ) {					trace("-------------mehr kochen!");								} else if ( id == 1 ){					trace("-------------mehr reden!"); 									} else if ( id == 2 ) {					trace("-------------ende!");									} else {					trace("not");				}							} 					}				private function _removeCube( id:int , index:int ) : void {			if ( _cubes[ id ] == null ) _cubes[ id ] = new Array();		}					}}