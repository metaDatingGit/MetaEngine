/* AS3	Copyright 2012 Philipp Schoessler*/package {		import ProjectObject;	import Utils;		public class ProjectCalc {						public function ProjectCalc (){					}		//--------------------------------------//  PRIVATE VARIABLES//--------------------------------------		private var randNum:int;		private var tempList:Array;		private var playList:Array;		private var metaList:Array;		private var videoObjects: Array;		private var videoArray:Array;		//sound: private var soundArray:Array;				//--------------------------------------//  PUBLIC METHODS//--------------------------------------				public function calculateClips(xml:XMLList):Array 		{						trace("calc project_name");						tempList = new Array();			playList = new Array();			metaList = new Array();			videoObjects = new Array();			videoArray = new Array();			//sound: soundArray = new Array();						//FILTERING			for (var i:int = 0; i < xml.length(); i++)			{				videoObjects[i] = new ProjectObject (i,													  xml[i].clipname.text(),													  xml[i].pro_contra.text(),													  xml[i].reaction_action.text(),													  xml[i].male_female.text(),													  xml[i].strategy.text(),													  xml[i].intensity.text(),													  xml[i].shot.text(),													  xml[i].clip_pos.text(),													  xml[i].family.text(),													  xml[i].religion.text(),													  xml[i].emotion.text(),													  xml[i].society.text(),													  xml[i].routine.text(),													  xml[i].spare_time.text(),													  xml[i].safety.text(),													  xml[i].freedom.text(),													  xml[i].loyalty_sex.text(),													  xml[i].emotional_reaction.text(),													  xml[i].flowing_reaction.text(),													  xml[i].joker.text()												 		);												//Utils.allFilesNames.push(videoObjects[i].getClipName);								if(videoObjects[i].getJoker == "video")					{						videoArray.push(videoObjects[i]);					}								tempList.push(videoObjects[i]);			}									//ASSEMBLE PLAYLIST						for(var i:int = 0; i < 5; i++)			{				playList.push(videoArray[i].getClipName);			}									trace(playList);			return playList;		}		//FINE FILTERING//--------------------------------------//  PRIVATE METHODS//--------------------------------------				private function intro():void		{			/*			*			*/		}		//--------------------------------------		private function outro():void		{			/*			*			*/		}		//--------------------------------------//--------------------------------------//  PUBLIC METHODS / GETTERS / SETTERS//--------------------------------------		public function get getMetaList():Array		{			return metaList;		}	//--------------------------------------		public function get getAllClipNames():Array		{			var returnArr:Array = new Array();						if(videoObjects != null)				for(var i:int = 0; i < videoObjects.length; i++)				{					returnArr.push(videoObjects[i].getClipName);					//trace("clipName: " + videoObjects[i].getClipName);				}			else				trace("ERROR: To call getAllClipNames you have to call calculateClips first");						return returnArr;		}//--------------------------------------				public function pushRandObject(theDestinationArr:Array, theSourceArr:Array):void		{			try			{				//trace("push / länge des source array: " + theSourceArr.length);				if(theSourceArr.length != 0)				{					randNum = Utils.randRound(theSourceArr.length);					theDestinationArr.push(theSourceArr[randNum]);					//clipToRemoveStr = theSourceArr[randNum]/*.getClipName*/;				}				else{trace("------------------------no elements in push");}			}			catch(error:Error)			{				trace("--------------------error in pushRandObject: ");			}		}//--------------------------------------				public function pushRandName(theDestinationArr:Array, theSourceArr:Array):void		{			randNum = Utils.randRound(theSourceArr.length);			theDestinationArr.push(theSourceArr[randNum].getClipName);			//clipToRemoveStr = theSourceArr[randNum]/*.getClipName*/;		}		//--------------------------------------		public function pushClipNames(theDestinationArr:Array, theSourceArr:Array):void		{			//trace("SourceArr: " + theSourceArr.length);			if(theSourceArr.length != 0)			{				for( var i:int = 0; i < theSourceArr.length; i++ )				{					//trace("clipName: " + theSourceArr[i].getClipName);					theDestinationArr.push(theSourceArr[i].getClipName);				}			}			else				trace("ERROR: in pushClipName function: no Element in theSourceArr");		}//--------------------------------------		public function pushClipName(theDestinationArr:Array, theSourceArr:Array):void		{			//trace("SourceArr: " + theSourceArr.length);			if(theSourceArr.length != 0)			{				for( var i:int = 0; i < theSourceArr.length; i++ )				{					//trace("clipName: " + theSourceArr[i].getClipName);					theDestinationArr.push(theSourceArr[i]);				}			}			else				trace("ERROR: in pushClipName function: no Element in theSourceArr");		}//--------------------------------------	}}